//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SmsPortalForms.SMSPORTALAPI {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SmsportalApiSoap", Namespace="http://smsportalapi.com/")]
    public partial class SmsportalApi : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoginSystemOperatorOperationCompleted;
        
        private System.Threading.SendOrPostCallback sp_CreateVendorAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginVendorAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateVendorUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateVendorUserByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllVendorAdminsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteVendorAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnlockVendorAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVendorAdminByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateVendorAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckDuplicateVendorAdminOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SmsportalApi() {
            this.Url = global::SmsPortalForms.Properties.Settings.Default.SmsPortalForms_SMSPORTALAPI_SmsportalApi;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginSystemOperatorCompletedEventHandler LoginSystemOperatorCompleted;
        
        /// <remarks/>
        public event sp_CreateVendorAdminCompletedEventHandler sp_CreateVendorAdminCompleted;
        
        /// <remarks/>
        public event LoginVendorAdminCompletedEventHandler LoginVendorAdminCompleted;
        
        /// <remarks/>
        public event CreateVendorUserCompletedEventHandler CreateVendorUserCompleted;
        
        /// <remarks/>
        public event ValidateVendorUserByEmailCompletedEventHandler ValidateVendorUserByEmailCompleted;
        
        /// <remarks/>
        public event GetAllVendorAdminsCompletedEventHandler GetAllVendorAdminsCompleted;
        
        /// <remarks/>
        public event DeleteVendorAdminCompletedEventHandler DeleteVendorAdminCompleted;
        
        /// <remarks/>
        public event UnlockVendorAdminCompletedEventHandler UnlockVendorAdminCompleted;
        
        /// <remarks/>
        public event GetVendorAdminByIdCompletedEventHandler GetVendorAdminByIdCompleted;
        
        /// <remarks/>
        public event UpdateVendorAdminCompletedEventHandler UpdateVendorAdminCompleted;
        
        /// <remarks/>
        public event CheckDuplicateVendorAdminCompletedEventHandler CheckDuplicateVendorAdminCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smsportalapi.com/LoginSystemOperator", RequestNamespace="http://smsportalapi.com/", ResponseNamespace="http://smsportalapi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable LoginSystemOperator(string email, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] passwordHash) {
            object[] results = this.Invoke("LoginSystemOperator", new object[] {
                        email,
                        passwordHash});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void LoginSystemOperatorAsync(string email, byte[] passwordHash) {
            this.LoginSystemOperatorAsync(email, passwordHash, null);
        }
        
        /// <remarks/>
        public void LoginSystemOperatorAsync(string email, byte[] passwordHash, object userState) {
            if ((this.LoginSystemOperatorOperationCompleted == null)) {
                this.LoginSystemOperatorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginSystemOperatorOperationCompleted);
            }
            this.InvokeAsync("LoginSystemOperator", new object[] {
                        email,
                        passwordHash}, this.LoginSystemOperatorOperationCompleted, userState);
        }
        
        private void OnLoginSystemOperatorOperationCompleted(object arg) {
            if ((this.LoginSystemOperatorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginSystemOperatorCompleted(this, new LoginSystemOperatorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smsportalapi.com/sp_CreateVendorAdmin", RequestNamespace="http://smsportalapi.com/", ResponseNamespace="http://smsportalapi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void sp_CreateVendorAdmin(string vendorName, string userName, string email, string password) {
            this.Invoke("sp_CreateVendorAdmin", new object[] {
                        vendorName,
                        userName,
                        email,
                        password});
        }
        
        /// <remarks/>
        public void sp_CreateVendorAdminAsync(string vendorName, string userName, string email, string password) {
            this.sp_CreateVendorAdminAsync(vendorName, userName, email, password, null);
        }
        
        /// <remarks/>
        public void sp_CreateVendorAdminAsync(string vendorName, string userName, string email, string password, object userState) {
            if ((this.sp_CreateVendorAdminOperationCompleted == null)) {
                this.sp_CreateVendorAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.Onsp_CreateVendorAdminOperationCompleted);
            }
            this.InvokeAsync("sp_CreateVendorAdmin", new object[] {
                        vendorName,
                        userName,
                        email,
                        password}, this.sp_CreateVendorAdminOperationCompleted, userState);
        }
        
        private void Onsp_CreateVendorAdminOperationCompleted(object arg) {
            if ((this.sp_CreateVendorAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sp_CreateVendorAdminCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smsportalapi.com/LoginVendorAdmin", RequestNamespace="http://smsportalapi.com/", ResponseNamespace="http://smsportalapi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable LoginVendorAdmin(string email, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] passwordHash) {
            object[] results = this.Invoke("LoginVendorAdmin", new object[] {
                        email,
                        passwordHash});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void LoginVendorAdminAsync(string email, byte[] passwordHash) {
            this.LoginVendorAdminAsync(email, passwordHash, null);
        }
        
        /// <remarks/>
        public void LoginVendorAdminAsync(string email, byte[] passwordHash, object userState) {
            if ((this.LoginVendorAdminOperationCompleted == null)) {
                this.LoginVendorAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginVendorAdminOperationCompleted);
            }
            this.InvokeAsync("LoginVendorAdmin", new object[] {
                        email,
                        passwordHash}, this.LoginVendorAdminOperationCompleted, userState);
        }
        
        private void OnLoginVendorAdminOperationCompleted(object arg) {
            if ((this.LoginVendorAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginVendorAdminCompleted(this, new LoginVendorAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smsportalapi.com/CreateVendorUser", RequestNamespace="http://smsportalapi.com/", ResponseNamespace="http://smsportalapi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateVendorUser(string vendorName, string username, string email, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] passwordHash) {
            object[] results = this.Invoke("CreateVendorUser", new object[] {
                        vendorName,
                        username,
                        email,
                        passwordHash});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateVendorUserAsync(string vendorName, string username, string email, byte[] passwordHash) {
            this.CreateVendorUserAsync(vendorName, username, email, passwordHash, null);
        }
        
        /// <remarks/>
        public void CreateVendorUserAsync(string vendorName, string username, string email, byte[] passwordHash, object userState) {
            if ((this.CreateVendorUserOperationCompleted == null)) {
                this.CreateVendorUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateVendorUserOperationCompleted);
            }
            this.InvokeAsync("CreateVendorUser", new object[] {
                        vendorName,
                        username,
                        email,
                        passwordHash}, this.CreateVendorUserOperationCompleted, userState);
        }
        
        private void OnCreateVendorUserOperationCompleted(object arg) {
            if ((this.CreateVendorUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateVendorUserCompleted(this, new CreateVendorUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smsportalapi.com/ValidateVendorUserByEmail", RequestNamespace="http://smsportalapi.com/", ResponseNamespace="http://smsportalapi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ValidateVendorUserByEmail(string email, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] passwordHash) {
            object[] results = this.Invoke("ValidateVendorUserByEmail", new object[] {
                        email,
                        passwordHash});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateVendorUserByEmailAsync(string email, byte[] passwordHash) {
            this.ValidateVendorUserByEmailAsync(email, passwordHash, null);
        }
        
        /// <remarks/>
        public void ValidateVendorUserByEmailAsync(string email, byte[] passwordHash, object userState) {
            if ((this.ValidateVendorUserByEmailOperationCompleted == null)) {
                this.ValidateVendorUserByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateVendorUserByEmailOperationCompleted);
            }
            this.InvokeAsync("ValidateVendorUserByEmail", new object[] {
                        email,
                        passwordHash}, this.ValidateVendorUserByEmailOperationCompleted, userState);
        }
        
        private void OnValidateVendorUserByEmailOperationCompleted(object arg) {
            if ((this.ValidateVendorUserByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateVendorUserByEmailCompleted(this, new ValidateVendorUserByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smsportalapi.com/GetAllVendorAdmins", RequestNamespace="http://smsportalapi.com/", ResponseNamespace="http://smsportalapi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAllVendorAdmins() {
            object[] results = this.Invoke("GetAllVendorAdmins", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllVendorAdminsAsync() {
            this.GetAllVendorAdminsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllVendorAdminsAsync(object userState) {
            if ((this.GetAllVendorAdminsOperationCompleted == null)) {
                this.GetAllVendorAdminsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllVendorAdminsOperationCompleted);
            }
            this.InvokeAsync("GetAllVendorAdmins", new object[0], this.GetAllVendorAdminsOperationCompleted, userState);
        }
        
        private void OnGetAllVendorAdminsOperationCompleted(object arg) {
            if ((this.GetAllVendorAdminsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllVendorAdminsCompleted(this, new GetAllVendorAdminsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smsportalapi.com/DeleteVendorAdmin", RequestNamespace="http://smsportalapi.com/", ResponseNamespace="http://smsportalapi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteVendorAdmin(int vendorId) {
            this.Invoke("DeleteVendorAdmin", new object[] {
                        vendorId});
        }
        
        /// <remarks/>
        public void DeleteVendorAdminAsync(int vendorId) {
            this.DeleteVendorAdminAsync(vendorId, null);
        }
        
        /// <remarks/>
        public void DeleteVendorAdminAsync(int vendorId, object userState) {
            if ((this.DeleteVendorAdminOperationCompleted == null)) {
                this.DeleteVendorAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteVendorAdminOperationCompleted);
            }
            this.InvokeAsync("DeleteVendorAdmin", new object[] {
                        vendorId}, this.DeleteVendorAdminOperationCompleted, userState);
        }
        
        private void OnDeleteVendorAdminOperationCompleted(object arg) {
            if ((this.DeleteVendorAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteVendorAdminCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smsportalapi.com/UnlockVendorAdmin", RequestNamespace="http://smsportalapi.com/", ResponseNamespace="http://smsportalapi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UnlockVendorAdmin(int vendorId) {
            this.Invoke("UnlockVendorAdmin", new object[] {
                        vendorId});
        }
        
        /// <remarks/>
        public void UnlockVendorAdminAsync(int vendorId) {
            this.UnlockVendorAdminAsync(vendorId, null);
        }
        
        /// <remarks/>
        public void UnlockVendorAdminAsync(int vendorId, object userState) {
            if ((this.UnlockVendorAdminOperationCompleted == null)) {
                this.UnlockVendorAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnlockVendorAdminOperationCompleted);
            }
            this.InvokeAsync("UnlockVendorAdmin", new object[] {
                        vendorId}, this.UnlockVendorAdminOperationCompleted, userState);
        }
        
        private void OnUnlockVendorAdminOperationCompleted(object arg) {
            if ((this.UnlockVendorAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnlockVendorAdminCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smsportalapi.com/GetVendorAdminById", RequestNamespace="http://smsportalapi.com/", ResponseNamespace="http://smsportalapi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetVendorAdminById(int vendorId) {
            object[] results = this.Invoke("GetVendorAdminById", new object[] {
                        vendorId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetVendorAdminByIdAsync(int vendorId) {
            this.GetVendorAdminByIdAsync(vendorId, null);
        }
        
        /// <remarks/>
        public void GetVendorAdminByIdAsync(int vendorId, object userState) {
            if ((this.GetVendorAdminByIdOperationCompleted == null)) {
                this.GetVendorAdminByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVendorAdminByIdOperationCompleted);
            }
            this.InvokeAsync("GetVendorAdminById", new object[] {
                        vendorId}, this.GetVendorAdminByIdOperationCompleted, userState);
        }
        
        private void OnGetVendorAdminByIdOperationCompleted(object arg) {
            if ((this.GetVendorAdminByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVendorAdminByIdCompleted(this, new GetVendorAdminByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smsportalapi.com/UpdateVendorAdmin", RequestNamespace="http://smsportalapi.com/", ResponseNamespace="http://smsportalapi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateVendorAdmin(int vendorId, string vendorName, string userName, string email) {
            this.Invoke("UpdateVendorAdmin", new object[] {
                        vendorId,
                        vendorName,
                        userName,
                        email});
        }
        
        /// <remarks/>
        public void UpdateVendorAdminAsync(int vendorId, string vendorName, string userName, string email) {
            this.UpdateVendorAdminAsync(vendorId, vendorName, userName, email, null);
        }
        
        /// <remarks/>
        public void UpdateVendorAdminAsync(int vendorId, string vendorName, string userName, string email, object userState) {
            if ((this.UpdateVendorAdminOperationCompleted == null)) {
                this.UpdateVendorAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateVendorAdminOperationCompleted);
            }
            this.InvokeAsync("UpdateVendorAdmin", new object[] {
                        vendorId,
                        vendorName,
                        userName,
                        email}, this.UpdateVendorAdminOperationCompleted, userState);
        }
        
        private void OnUpdateVendorAdminOperationCompleted(object arg) {
            if ((this.UpdateVendorAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateVendorAdminCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smsportalapi.com/CheckDuplicateVendorAdmin", RequestNamespace="http://smsportalapi.com/", ResponseNamespace="http://smsportalapi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckDuplicateVendorAdmin(string vendorName, string email) {
            object[] results = this.Invoke("CheckDuplicateVendorAdmin", new object[] {
                        vendorName,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckDuplicateVendorAdminAsync(string vendorName, string email) {
            this.CheckDuplicateVendorAdminAsync(vendorName, email, null);
        }
        
        /// <remarks/>
        public void CheckDuplicateVendorAdminAsync(string vendorName, string email, object userState) {
            if ((this.CheckDuplicateVendorAdminOperationCompleted == null)) {
                this.CheckDuplicateVendorAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckDuplicateVendorAdminOperationCompleted);
            }
            this.InvokeAsync("CheckDuplicateVendorAdmin", new object[] {
                        vendorName,
                        email}, this.CheckDuplicateVendorAdminOperationCompleted, userState);
        }
        
        private void OnCheckDuplicateVendorAdminOperationCompleted(object arg) {
            if ((this.CheckDuplicateVendorAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckDuplicateVendorAdminCompleted(this, new CheckDuplicateVendorAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void LoginSystemOperatorCompletedEventHandler(object sender, LoginSystemOperatorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginSystemOperatorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginSystemOperatorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void sp_CreateVendorAdminCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void LoginVendorAdminCompletedEventHandler(object sender, LoginVendorAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginVendorAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginVendorAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateVendorUserCompletedEventHandler(object sender, CreateVendorUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateVendorUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateVendorUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ValidateVendorUserByEmailCompletedEventHandler(object sender, ValidateVendorUserByEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateVendorUserByEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateVendorUserByEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAllVendorAdminsCompletedEventHandler(object sender, GetAllVendorAdminsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllVendorAdminsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllVendorAdminsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteVendorAdminCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UnlockVendorAdminCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetVendorAdminByIdCompletedEventHandler(object sender, GetVendorAdminByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVendorAdminByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVendorAdminByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateVendorAdminCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CheckDuplicateVendorAdminCompletedEventHandler(object sender, CheckDuplicateVendorAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckDuplicateVendorAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckDuplicateVendorAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591